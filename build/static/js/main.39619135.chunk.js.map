{"version":3,"sources":["firebase-config.js","pages/Home.js","pages/CreatePost.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","Home","isAuth","useState","postLists","setPostList","postsCollectionRef","collection","deletePost","id","a","postDoc","doc","deleteDoc","useEffect","getPosts","getDocs","data","docs","map","className","post","title","author","currentUser","uid","onClick","postText","name","CreatePost","setTitle","setPostText","navigate","useNavigate","createPost","addDoc","displayName","placeholder","onChange","event","target","value","Login","setIsAuth","signInWithPopup","then","result","localStorage","setItem","App","getItem","to","signOut","clear","window","location","pathname","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39619135.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDvNluB1kZ0PyY7Me7_IS2y6SF2W-Glxio\",\n  authDomain: \"reactjs-and-firebase-app.firebaseapp.com\",\n  projectId: \"reactjs-and-firebase-app\",\n  storageBucket: \"reactjs-and-firebase-app.appspot.com\",\n  messagingSenderId: \"403336542355\",\n  appId: \"1:403336542355:web:d7c7c0cf2c916f119e3566\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\n","import React, { useEffect, useState } from \"react\";\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\n\nfunction Home({ isAuth }) {\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n\n  const deletePost = async (id) => {\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc(postDoc);\n  };\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    };\n\n    getPosts();\n  }, [deletePost]);\n\n  \n  return (\n    <div className=\"homePage\">\n      {postLists.map((post) => {\n        return (\n          <div className=\"post\">\n            <div className=\"postHeader\">\n              <div className=\"title\">\n                <h1> {post.title}</h1>\n              </div>\n              <div className=\"deletePost\">\n                {isAuth && post.author.id === auth.currentUser.uid && (\n                  <button\n                    onClick={() => {\n                      deletePost(post.id);\n                    }}\n                  >\n                    {\" \"}\n                    &#128465;\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"postTextContainer\"> {post.postText} </div>\n            <h3>@{post.author.name}</h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CreatePost({ isAuth }) {\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const createPost = async () => {\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  return (\n    <div className=\"createPostPage\">\n      <div className=\"cpContainer\">\n        <h1>Create A Post</h1>\n        <div className=\"inputGp\">\n          <label> Title:</label>\n          <input\n            placeholder=\"Title...\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"inputGp\">\n          <label> Post:</label>\n          <textarea\n            placeholder=\"Post...\"\n            onChange={(event) => {\n              setPostText(event.target.value);\n            }}\n          />\n        </div>\n        <button onClick={createPost}> Submit Post</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","import React from \"react\";\nimport { auth, provider } from \"../firebase-config\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login({ setIsAuth }) {\n  let navigate = useNavigate();\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then((result) => {\n      localStorage.setItem(\"isAuth\", true);\n      setIsAuth(true);\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <div className=\"loginPage\">\n      <p>Sign In With Google to Continue</p>\n      <button className=\"login-with-google-btn\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport CreatePost from \"./pages/CreatePost\";\nimport Login from \"./pages/Login\";\nimport { useState } from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase-config\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuth\"));\n\n  const signUserOut = () => {\n    signOut(auth).then(() => {\n      localStorage.clear();\n      setIsAuth(false);\n      window.location.pathname = \"/login\";\n    });\n  };\n\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\"> Home </Link>\n\n        {!isAuth ? (\n          <Link to=\"/login\"> Login </Link>\n        ) : (\n          <>\n            <Link to=\"/createpost\"> Create Post </Link>\n            <button onClick={signUserOut}> Log Out</button>\n          </>\n        )}\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Home isAuth={isAuth} />} />\n        <Route path=\"/createpost\" element={<CreatePost isAuth={isAuth} />} />\n        <Route path=\"/login\" element={<Login setIsAuth={setIsAuth} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}